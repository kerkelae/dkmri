import numpy as np
import numpy.testing as npt

import dkmri


SEED = 123

params = np.array(
    [
        7.90764792,
        0.88660664,
        0.82186469,
        0.81741033,
        0.25016042,
        0.12341918,
        0.28344717,
        0.97744794,
        0.64809536,
        0.54047796,
        0.09333558,
        -0.06614247,
        0.07547532,
        0.16822022,
        0.12438352,
        0.14840455,
        0.16173709,
        0.17534938,
        0.42078548,
        -0.05851049,
        0.07203667,
        0.12034342,
    ]
)


def test__design_matrix():
    bvals = np.arange(5)
    bvecs = np.array(
        [
            [1.0, 0.0, 0.0],
            [1.0, 0.0, 0.0],
            [1.0, 0.0, 0.0],
            [0.0, 1.0, 0.0],
            [0.0, 0.0, 1.0],
        ]
    )
    desired_X = np.array(
        [
            [1.0, 1.0, 1.0, 1.0, 1.0],
            [0.0, -1.0, -2.0, -0.0, -0.0],
            [0.0, -0.0, -0.0, -3.0, -0.0],
            [0.0, -0.0, -0.0, -0.0, -4.0],
            [0.0, -0.0, -0.0, -0.0, -0.0],
            [0.0, -0.0, -0.0, -0.0, -0.0],
            [0.0, -0.0, -0.0, -0.0, -0.0],
            [0.0, 1 / 6, 2 / 3, 0.0, 0.0],
            [0.0, 0.0, 0.0, 1.5, 0.0],
            [0.0, 0.0, 0.0, 0.0, 8 / 3],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0],
        ]
    ).T
    X = dkmri._design_matrix(bvals, bvecs)
    npt.assert_almost_equal(X, desired_X)
